name: Run testsuite on BKG DEV-branch

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      STATUS: ${{ steps.healthcheck.outputs.STATUS }}
    steps:
      - name: Set up Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v12
        with:
          repositories: '[{ "id": "github", "name": "DCSA Backend repo", "url": "https://maven.pkg.github.com/dcsaorg/DCSA-Core", "releases": { "enabled": "true" }, "snapshots": { "enabled": "true" } }]'
          servers: '[{ "id": "github", "username": "${{ secrets.DCSA_USER }}", "password": "${{ secrets.DCSA_PACKAGES_PAT }}" }]'

      - name: Checkout dcsaorg/DCSA-Event-Core
        uses: actions/checkout@v2.3.1
        with:
          repository: dcsaorg/DCSA-Event-Core
          ref: dev-bkg                   # temp: use this event-core branch
          path: DCSA-Event-Core
          token: ${{ secrets.REPO_ACCESS_PAT }}

      - name: Set dcsa-event-core mvn version variable
        run: cd DCSA-Event-Core && echo "DCSA_EVENT_CORE_PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout -Dchangelist='')- " >> $GITHUB_ENV

      - run: echo $DCSA_EVENT_CORE_PROJECT_VERSION

      # Prepare BKG
      - name: Fetch backend
        uses: actions/checkout@v2
        with:
          repository: dcsaorg/DCSA-BKG
          ref: dev
          submodules: recursive
          path: DCSA-BKG
          token: ${{ secrets.DCSA_PACKAGES_PAT }}
      - name: Build backend
        run: cd DCSA-BKG && mvn package -Ddcsa.events.version=$DCSA_EVENT_CORE_PROJECT_VERSION -Ddcsa.event.tag=dev-bkg -Ddcsa.artifacttype=-SNAPSHOT #Need to skip the tests as they depend on a running DB

      - name: Build and run the backend microservices
        run: cd DCSA-BKG && docker-compose -f docker-compose.yml up -d -V

      # Fetch Validator before loading the test data.  This gives the database initialization some time
      # to finish

      - name: Checkout API validator
        uses: actions/checkout@v2
        with:
          repository: dcsaorg/DCSA-API-Validator
          token: ${{ secrets.REPO_ACCESS_PAT }}
          path: DCSA-API-Validator

      # Assert that the database is ready to load the test data.
      - run: echo "SELECT 1;" | docker exec -i -u postgres dcsa_db psql -d dcsa_openapi -f - 2>/dev/null || sleep 5

      # Run validator
      - name: Run the API validator on BKG
        run: cd DCSA-API-Validator && mvn -Dtest.suite=BKGV1.xml test
        env:
          client_secret: ${{ secrets.AUTH0_DCSA_CLIENT_SECRET }}
          client_id: 1qEYXCbxWvjeYS8VVm1BfnfZrP3TY9n8
          audience: localhost
          OAuthTokenUri: https://dcsa.eu.auth0.com/oauth/token
          API_ROOT_URI: http://localhost:9090/v1
          CALLBACK_URI: http://172.17.0.1:4567
          DCSA_API_VALIDATOR_MAY_USE_POST_EVENTS_ENDPOINT: true