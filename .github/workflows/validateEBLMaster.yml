name: Run testsuite on EBL master

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Java JDK
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v12
      with:
        repositories: '[{ "id": "github", "name": "DCSA Backend repo", "url": "https://maven.pkg.github.com/dcsaorg/DCSA-Core", "releases": { "enabled": "false" }, "snapshots": { "enabled": "true" } }]'
        servers: '[{ "id": "github", "username": "${{ secrets.DCSA_USER }}", "password": "${{ secrets.DCSA_PACKAGES_PAT }}" }]'

    # Prepare database
    - name: Fetch IM
      uses: actions/checkout@v2
      with:
        repository: dcsaorg/DCSA-Information-Model
        ref: 3.0.0
        path: DCSA-Information-Model

    # Prepare EBL
    - name: Fetch backend
      uses: actions/checkout@v2
      with:
        repository: dcsaorg/DCSA-EBL
        ref: fix-ebl
        path: DCSA-EBL
        token: ${{ secrets.DCSA_PACKAGES_PAT }}
    - name: Build backend
      run: cd DCSA-EBL && mvn package -DskipTests #Need to skip the tests as they depend on a running DB
    - name: Build and run the backend microservices
      run: cd DCSA-EBL && docker-compose -f docker-compose.yml up -d -V

    # Fetch Validator before loading the test data.  This gives the database initialization some time
    # to finish

    # Assert that the database is ready to load the test data.
    - run: echo "SELECT 1;" | docker exec -i -u postgres dcsa_db psql -d dcsa_openapi -f - 2>/dev/null || sleep 5

    - name: Load DCSA EBL test data
      run: cat DCSA-Information-Model/datamodel/testdata.d/*.sql | docker exec -i -u postgres dcsa_db psql -d dcsa_openapi -f -

    # Run validator
    - name: Run the API validator on EBLV1
      run: mvn -Dtest.suite=EBLV1.xml test
      env: 
        client_secret: ${{ secrets.AUTH0_DCSA_CLIENT_SECRET }}
        client_id: 1qEYXCbxWvjeYS8VVm1BfnfZrP3TY9n8
        audience: localhost
        OAuthTokenUri: https://dcsa.eu.auth0.com/oauth/token
        API_ROOT_URI: http://localhost:9090/v1
        CALLBACK_URI: http://172.17.0.1:4567
        DCSA_API_VALIDATOR_MAY_USE_POST_EVENTS_ENDPOINT: true
